# Generated by Django 4.1.7 on 2023-06-25 11:01

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, upload_to='')),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('is_manager', models.BooleanField(default=False)),
                ('is_expat', models.BooleanField(default=False)),
                ('is_director', models.BooleanField(default=False)),
                ('is_supporter', models.BooleanField(default=False)),
                ('cellphone_number', models.SmallIntegerField(default='1', verbose_name='Cellphone number')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('house_address', models.CharField(blank=True, max_length=150)),
                ('turkish_id', models.SmallIntegerField(default='1', verbose_name='Turkish ID number')),
                ('tc_id_expiry_date', models.DateField(default=datetime.date.today, verbose_name='TC expiry date')),
                ('passport_number', models.CharField(blank=True, max_length=20)),
                ('passport_expiry_date', models.DateField(default=datetime.date.today, verbose_name='passport expiry date')),
                ('is_company_cars', models.BooleanField(default=False)),
                ('is_driving_licenses', models.BooleanField(default=False)),
                ('is_family_residence_permits', models.BooleanField(default=False)),
                ('is_green_cards', models.BooleanField(default=False)),
                ('is_houses', models.BooleanField(default=False)),
                ('is_moving', models.BooleanField(default=False)),
                ('is_pick_ups', models.BooleanField(default=False)),
                ('is_work_permits', models.BooleanField(default=False)),
                ('car_plate', models.CharField(blank=True, max_length=20)),
                ('company_car_model', models.CharField(blank=True, choices=[('genesis', 'GENESIS'), ('santafe', 'SANTAFE'), ('tucson', 'TUCSON'), ('elantra', 'ELANTRA')], max_length=10)),
                ('car_model_year', models.SmallIntegerField(default='1', verbose_name='Car model year')),
                ('house_location', models.CharField(blank=True, choices=[('alkent', 'Alkent'), ('sariyer', 'Sariyer'), ('besiktas', 'Besiktas'), ('gokturk', 'Gokturk')], max_length=10)),
                ('car_location', models.CharField(blank=True, choices=[('istanbul', 'Istanbul'), ('izmit', 'Izmit')], max_length=10)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=10)),
                ('language', models.CharField(blank=True, choices=[('kr', 'Korean'), ('tr', 'Turkish'), ('en', 'English')], max_length=2)),
                ('currency', models.CharField(blank=True, choices=[('usd', 'USD'), ('tl', 'TL'), ('won', 'WON')], max_length=5)),
                ('department', models.CharField(blank=True, choices=[('ga', 'GA'), ('hr', 'HR'), ('pr', 'PR'), ('er', 'ER'), ('it', 'IT'), ('finance', 'FINANCE'), ('sales', 'SALES'), ('aftersales', 'AFTERSALES'), ('import', 'IMPORT'), ('export', 'EXPORT'), ('audit', 'AUDIT'), ('press', 'PRESS'), ('body', 'BODY'), ('paint', 'PAINT'), ('assembly', 'ASSEMBLY'), ('quality', 'QUALITY'), ('procurement', 'PROCUREMENT')], max_length=15)),
                ('division', models.CharField(blank=True, choices=[('ceo', 'CEO'), ('sales', 'SALES'), ('finance', 'FINANCE'), ('admin', 'ADMIN'), ('production', 'PRODUCTION'), ('procurement', 'PROCUREMENT')], max_length=15)),
                ('position', models.CharField(blank=True, choices=[('ceo', 'CEO'), ('director', 'DIRECTOR'), ('coordinator', 'COORDINATOR')], max_length=15)),
                ('hq_position', models.CharField(blank=True, choices=[('sj', 'SJ'), ('bsj', 'BSJ'), ('jm', 'JM'), ('sm', 'SM'), ('cm', 'CM')], max_length=5)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
